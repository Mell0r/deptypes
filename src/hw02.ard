\import Data.Bool
\import Data.Or
\import Logic
\import hw01 (fac)
\import lect02 \hiding (Empty, absurd)

-- 1. Определите полиморфный tail для списков

\func tail (A : \Type) (l : List A) : List A \elim l
  | nil => nil
  | cons a ls => ls

-- 2. Реализуйте любой (but choose wisely) алгоритм сортировки. Функцию сравнения можно принимать в качестве аргумента
--
--\func sort (A: \Type)

-- 3. Докажите ассоциативность && и ||

\func &&-assoc (x y z : Bool) : (x and y) and z = x and (y and z) \elim x
  | true => idp
  | false => idp

\func ||-assoc (x y z : Bool) : (x or y) or z = x or (y or z) \elim x
  | true => idp
  | false => idp

-- 4. Докажите, что fac 3 равно 6

\func fac3eq6 : fac 3 = 6 => idp

-- 5. Докажите следующие пропозициональные тавтологии (можно решить любые 2 из 3 задач)

-- t1 : (P and Q -> R) -> P -> Q -> R
\func t1 {P Q R : \Type} (f : \Sigma P Q -> R) (p : P) (q : Q) : R => f (p, q)

-- t2 : (P -> R) -> (Q -> R) -> P or Q -> R
\func t2 {P Q R : \Type} (f : P -> R) (g : Q -> R) (h : Or P Q) : R \elim h
  | inl p => f p
  | inr q => g q

-- t3 : ((P -> Q -> R) -> P) -> (P -> R) -> R
\func t3 {P Q R : \Type} (f : (P -> Q -> R) -> P) (g : P -> R) : R =>
  g (f (\lam (p : P) (q : Q) => g p))

-- 6. Сформулируйте и докажите следующие пропозициональные тавтологии (можно решить любые 2 из 3 задач)

-- t4 : (P -> Q -> R) -> P /\ Q -> R
\func t4 {P Q R : \Type} (f : P -> Q -> R) (g : \Sigma P Q) : R \elim g
  | (p, q) => f p q

\func andFirst {P Q : \Type} (f : \Sigma P Q) : P
  | (p, q) => p

\func andSecond {P Q : \Type} (f : \Sigma P Q) : Q
  | (p, q) => q

-- t5 : (P or Q -> P /\ Q) -> (P -> Q) /\ (Q -> P)
\func t5 {P Q R : \Type} (f : (Or P Q) -> \Sigma P Q) :
  \Sigma (P -> Q) (Q -> P) => (
    \lam (p : P) => andSecond (f (inl p)),
    \lam (q : Q) => andFirst (f (inr q))
  )

-- t6 : ((((P -> Q) -> P) -> P) -> Q) -> Q
\func t6 {P Q : \Type} (f : ((((P -> Q) -> P) -> P) -> Q) -> Q) : Q => {?}

-- 7. Докажите следующие утверждения

-- s1 : Если для любого x : Nat верно P(x), то существует x : Nat для которого P(x) верно
\func s1 (P : Nat -> \Type) (h : \Pi (x : Nat) -> P x) : \Sigma (x : Nat) (P x) =>
  (0, h 0)

-- s2 : Если не существует x : Nat такого, что верно P(x), то P(3) не верно
\func s2 (P : Nat -> \Type) (h : \Sigma (x : Nat) (P x) -> Empty) : P 3 -> Empty =>
  \lam p3 => h (3, p3)

-- 8. Сформулируйте и докажите следующие утверждения

-- s3 : Если для всех x : Nat верно, что P(x) влечет Q(x), и существует x : Nat для которого верно P(x),
-- то существует x : Nat для которого верно Q(x)
\func s3
  (P Q : Nat -> \Type)
  (f : \Pi (x : Nat) (P x) -> Q x)
  (q : \Sigma (x : Nat) (P x))
  : \Sigma (x : Nat) (Q x) \elim q
    | (x, px) => (x, f x px)


-- s4 : Если для всех x : Nat либо не верно P(x), либо не верно Q(x), то P(3) влечет, что Q(3) не верно
\func s4
  (P Q : Nat -> \Type)
  (f : \Pi (x : Nat) -> Or (P x -> Empty) (Q x -> Empty))
  : P 3 -> Q 3 -> Empty => \lam p3 q3 => \case f 3 \with {
      | inl not_p_x => not_p_x p3
      | inr not_q_x => not_q_x q3
    }